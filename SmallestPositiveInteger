// How to find the smallest positive integer value that cannot be represented as sum of any subset of a given array? 
 Input: {1, 3, 6, 10, 11, 15};
Output: 2

package Array;
public class SmallestPositiveInteger {
	public void findSmallestPoitiveInteger(int[] nums)
	{
		for(int i=0;i<nums.length;i++)
		{
			int sum=nums[i]+nums[i+1];
			for(int j=i+2;j<nums.length;j++)
			{
				if(sum==nums[j]) break;
				else
				{
					for(int k=0;k<nums.length;k++)
					{
						if(nums[k]+1==nums[k+1]) j++;
						else 
						{
							int val=nums[k]+1;
							if(nums[k]+1>val)
								{
								  val=nums[k]+1;
							     System.out.println(val);
								}
							     else
							 System.out.println(val);
							 
							}
					}
				}
			}
			break;
		}
		
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] nums= {1,3,6,10,11,15};
		SmallestPositiveInteger obj=new SmallestPositiveInteger();
	
		obj.findSmallestPoitiveInteger(nums);
		
	}

}
